@*@model IEnumerable<TaskManagementSystem.Domain.Entities.User>*@
@model PagedList.IPagedList<TaskManagementSystem.Domain.Entities.User>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
        ViewBag.Title = "Index";
}

<h2>Users</h2>


<table class="table">
    <tr>

        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
        </th>
        <th>
            Number of tasks
        </th>
        <th>
            Active
        </th>
        <th></th>
    </tr>

    @foreach (var item in ViewBag.Admins as List<TaskManagementSystem.Domain.Entities.User>)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>

            <td>
                @Html.ActionLink(@item.Tasks.Count() + " " + "Tasks", "TaskList", new { id = item.Id })
            </td>

            <td>
                Admin
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }



@foreach (var item in Model) {
    <tr>

        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>

        <td>
            @Html.ActionLink(@item.Tasks.Count() + " " + "Tasks", "TaskList", new { id = item.Id })
        </td>

        <td>
            @if (item.IsActive == true)
            {
                <input type="button" name = "@item.Email" value="Disable" class="activationBtn">

            }
            else
            {
                <input type="button" name = "@item.Email" value="Activate" class="activationBtn">
            }
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>
    </tr>
}

</table>



@Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }))

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount